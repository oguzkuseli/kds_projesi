<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Şube Performansı</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }
        .card {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .table th {
            background-color: #007bff;
            color: #fff;
        }
        .recommendation-badge {
            font-size: 0.9rem;
            padding: 0.5rem;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <%- include('navbar') %>

    <div class="container my-5">
        <h1 class="text-center mb-4">Şube Performansı</h1>
        
        <!-- Genel Özeti -->
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <h5 class="card-title">Toplam Gelir</h5>
                        <h3>₺<%= summary.totalIncome.toLocaleString('tr-TR') %></h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-danger text-white">
                    <div class="card-body">
                        <h5 class="card-title">Toplam Gider</h5>
                        <h3>₺<%= summary.totalExpense.toLocaleString('tr-TR') %></h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <h5 class="card-title">Net Kâr</h5>
                        <h3>₺<%= summary.netProfit.toLocaleString('tr-TR') %></h3>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <h5 class="card-title">Şube Sayısı</h5>
                        <h3><%= summary.totalBranches %></h3>
                    </div>
                </div>
            </div>
        </div>

        <!-- Şube Performans Tablosu -->
        <div class="table-responsive mb-4">
            <table class="table table-hover table-striped">
                <thead>
                    <tr>
                        <th>Şube Adı</th>
                        <th>Toplam Gelir</th>
                        <th>Toplam Gider</th>
                        <th>Net Kâr</th>
                        <th>Tavsiye</th>
                    </tr>
                </thead>
                <tbody>
                    <% branches.forEach(branch => { %>
                        <tr>
                            <td><%= branch.sube_ad %></td>
                            <td>₺<%= branch.totalIncome.toLocaleString('tr-TR') %></td>
                            <td>₺<%= branch.totalExpense.toLocaleString('tr-TR') %></td>
                            <td>₺<%= branch.netProfit.toLocaleString('tr-TR') %></td>
                            <td>
                                <span class="recommendation-badge bg-<%= branch.netProfit > 0 ? 'success' : 'danger' %> text-white">
                                    <%= branch.recommendation %>
                                </span>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Şube İşlemleri -->
        <div class="row">
            <div class="col-md-6">
                <!-- Şube Ekleme -->
                <div class="card mb-4">
                    <div class="card-header bg-success text-white">Şube Ekle</div>
                    <div class="card-body">
                        <form action="/analytics/sube/ekle" method="POST">
                            <div class="mb-3">
                                <label for="subeAd" class="form-label">Şube Adı</label>
                                <input type="text" class="form-control" id="subeAd" name="subeAd" required>
                            </div>
                            <button type="submit" class="btn btn-success w-100">Şube Ekle</button>
                        </form>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <!-- Şube Silme -->
                <div class="card mb-4">
                    <div class="card-header bg-danger text-white">Şube Kapat</div>
                    <div class="card-body">
                        <form action="/analytics/sube/sil" method="POST">
                            <div class="mb-3">
                                <label for="subeId" class="form-label">Şube Seç</label>
                                <select id="subeId" name="subeId" class="form-select" required>
                                    <% branches.forEach(branch => { %>
                                        <option value="<%= branch.sube_id %>"><%= branch.sube_ad %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-danger w-100">Şube Kapat</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

          <!-- Performans Grafikleri -->
          <div class="row">
            <div class="col-md-6">
                <h3 class="text-center mb-3">Şube Başına Gider</h3>
                <canvas id="incomeChart"></canvas>
            </div>
            <div class="col-md-6">
                <h3 class="text-center mb-3">Şube Başına Gelir</h3>
                <canvas id="expenseChart"></canvas>
            </div>
            <div class="row mt-5">
                <div class="col-12">
                    <h3 class="text-center">Gelir-Gider Karşılaştırma Grafiği</h3>
                    <canvas id="incomeExpenseComparisonChart"></canvas>
                </div>
            </div>
        </div>
      
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const performanceData = <%- JSON.stringify(performanceData) %>;
    
        // Define a basic color palette
        const colorPalette = [
            'rgba(255, 99, 132, 0.7)', // Red
            'rgba(54, 162, 235, 0.7)', // Blue
            'rgba(255, 206, 86, 0.7)', // Yellow
            'rgba(75, 192, 192, 0.7)', // Teal
            'rgba(153, 102, 255, 0.7)', // Purple
            'rgba(255, 159, 64, 0.7)'  // Orange
        ];
    
        // Extend the palette to match the number of labels if needed
        const generateColors = (count) => {
            const colors = [];
            for (let i = 0; i < count; i++) {
                colors.push(colorPalette[i % colorPalette.length]); // Repeat colors if needed
            }
            return colors;
        };
    
        // Colors for income and expense charts
        const incomeColors = generateColors(performanceData.labels.length);
        const expenseColors = generateColors(performanceData.labels.length);
    
        // Income Chart
        new Chart(document.getElementById('incomeChart'), {
            type: 'pie',
            data: {
                labels: performanceData.labels,
                datasets: [{
                    data: performanceData.income,
                    backgroundColor: incomeColors
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    
        // Expense Chart
        new Chart(document.getElementById('expenseChart'), {
            type: 'pie',
            data: {
                labels: performanceData.labels,
                datasets: [{
                    data: performanceData.expense,
                    backgroundColor: expenseColors
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });

        // Income vs Expense Comparison Chart
new Chart(document.getElementById('incomeExpenseComparisonChart'), {
    type: 'bar',
    data: {
        labels: performanceData.labels,
        datasets: [
            {
                label: 'Gelir (₺)',
                data: performanceData.income,
                backgroundColor: 'rgba(54, 162, 235, 0.7)', // Blue
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            },
            {
                label: 'Gider (₺)',
                data: performanceData.expense,
                backgroundColor: 'rgba(255, 99, 132, 0.7)', // Red
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }
        ]
    },
    options: {
        responsive: true,
        plugins: {
            legend: {
                position: 'top'
            },
            tooltip: {
                callbacks: {
                    label: function(context) {
                        return `${context.dataset.label}: ₺${context.raw.toLocaleString('tr-TR')}`;
                    }
                }
            }
        },
        scales: {
            y: {
                beginAtZero: true,
                title: {
                    display: true,
                    text: 'Tutar (₺)'
                }
            },
            x: {
                title: {
                    display: true,
                    text: 'Şubeler'
                }
            }
        }
    }
});
    </script>
</body>
</html>